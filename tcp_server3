#include <winsock2.h>
#include <ws2tcpip.h>
#include <iostream>
#include <string>

#pragma comment(lib, "ws2_32.lib")

std::string processMessage(const std::string& message) {
    // Простая логика обработки сообщений
    if (message.find("привет") != std::string::npos) {
        return "Привет! Чем могу помочь?";
    }
    else if (message.find("пока") != std::string::npos) {
        return "До свидания!";
    }
    else if (message.find("как дела") != std::string::npos) {
        return "У меня всё отлично, спасибо!";
    }
    else {
        return "Вы сказали: " + message + ". Я простой бот, напишите 'привет', 'как дела' или 'пока'!";
    }
}

int main() {
    setlocale(LC_ALL, "rus");

    WSADATA wsaData;
    WSAStartup(MAKEWORD(2, 2), &wsaData);

    SOCKET tcpServerSocket = socket(AF_INET, SOCK_STREAM, 0);
    sockaddr_in serverAddr;
    serverAddr.sin_family = AF_INET;
    serverAddr.sin_port = htons(12345);
    serverAddr.sin_addr.s_addr = INADDR_ANY;

    bind(tcpServerSocket, (sockaddr*)&serverAddr, sizeof(serverAddr));
    listen(tcpServerSocket, SOMAXCONN);

    std::cout << "Сервер чат-бота запущен\n";

    while (true) {
        SOCKET clientSocket = accept(tcpServerSocket, nullptr, nullptr);

        char buffer[1024];
        int bytesReceived = recv(clientSocket, buffer, 1024, 0);
        if (bytesReceived > 0) {
            std::string message(buffer, bytesReceived);
            std::cout << "Клиент: " << message << "\n";

            std::string response = processMessage(message);
            std::cout << "Бот: " << response << "\n";

            send(clientSocket, response.c_str(), response.length(), 0);
        }

        closesocket(clientSocket);
    }

    closesocket(tcpServerSocket);
    WSACleanup();
    return 0;
}
