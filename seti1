#include <fstream>
#include <iostream>
#include <thread>
#include <chrono>
#include <string>
#include <conio.h> // Для _kbhit() и _getch() (Windows)

using namespace std;

void monitorFile(const string& filename) {
    ifstream file(filename);
    if (!file) {
        cout << "Файл не открыт!\n\n";
        return;
    } else {
        cout << "Все ОК! Файл открыт!\n\n";
    }

    file.seekg(0, ios::end);
    int s1 = file.tellg();
    int s2 = s1;
    file.close();

    while (true) {
        this_thread::sleep_for(chrono::seconds(2));
        cout << "Файл тот же!" << endl;
        this_thread::sleep_for(chrono::seconds(3));

        if (_kbhit()) { // Проверяем нажатие клавиши
            char key = _getch();
            if (key == 27) { // ESC (код 27) - остановка
                cout << "\nМониторинг остановлен. Нажмите ENTER для возобновления..." << endl;
                while (true) { // Ждем нажатие ENTER
                    if (_kbhit() && _getch() == 13) {
                        cout << "Запуск мониторинга...\n";
                        return;
                    }
                }
            }
        }

        ifstream file(filename);
        file.seekg(0, ios::end);
        s2 = file.tellg();

        if (s2 != s1) {
            file.seekg(0, ios::beg);
            string line, lastLine;
            while (getline(file, line)) {
                if (!line.empty()) {
                    lastLine = line;
                }
            }

            if (!lastLine.empty()) {
                cout << "Последняя строка: " << lastLine << endl;
            }
        }

        file.close();
        s1 = s2;
    }
}

int main() {
    setlocale(LC_ALL, "rus");

    string filename = "abc.txt";

    while (true) {
        monitorFile(filename); // Запуск мониторинга
    }

    return 0;
}
