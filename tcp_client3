#include <winsock2.h>
#include <ws2tcpip.h>
#include <iostream>
#include <string>

#pragma comment(lib, "ws2_32.lib")

int main() {
    setlocale(LC_ALL, "rus");

    WSADATA wsaData;
    WSAStartup(MAKEWORD(2, 2), &wsaData);

    // Создаем UDP сокет
    SOCKET udpSocket = socket(AF_INET, SOCK_DGRAM, 0);

    // Настраиваем адрес сервера
    sockaddr_in serverAddr;
    serverAddr.sin_family = AF_INET;
    serverAddr.sin_port = htons(12345);
    inet_pton(AF_INET, "127.0.0.1", &serverAddr.sin_addr);

    // Настраиваем локальный адрес клиента
    sockaddr_in clientAddr;
    clientAddr.sin_family = AF_INET;
    clientAddr.sin_port = htons(54321);
    clientAddr.sin_addr.s_addr = INADDR_ANY;
    bind(udpSocket, (sockaddr*)&clientAddr, sizeof(clientAddr));

    std::cout << "UDP-клиент запущен. Введите сообщение (или 'exit' для выхода):\n";

    while (true) {
        std::cout << "> ";
        std::string message;
        std::getline(std::cin, message);

        if (message == "exit") break;

        if (message.empty()) {
            std::cout << "Сообщение не может быть пустым\n";
            continue;
        }

        // Отправляем сообщение серверу
        sendto(udpSocket, message.c_str(), message.length(), 0, 
               (sockaddr*)&serverAddr, sizeof(serverAddr));

        // Получаем эхо-ответ
        char buffer[1024];
        sockaddr_in fromAddr;
        int fromLen = sizeof(fromAddr);
        int bytesReceived = recvfrom(udpSocket, buffer, 1024, 0, 
                                   (sockaddr*)&fromAddr, &fromLen);

        if (bytesReceived > 0) {
            std::string response(buffer, bytesReceived);
            std::cout << "Эхо от сервера: " << response << "\n";
        }
        else {
            std::cout << "Ошибка получения ответа\n";
        }
    }

    closesocket(udpSocket);
    WSACleanup();
    return 0;
}
